{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/api/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/buggetboard/buggetboard.component.ts","webpack:///src/app/buggetboard/buggetboard.component.html","webpack:///src/app/new-bug-diag/new-bug-diag.component.ts","webpack:///src/app/new-bug-diag/new-bug-diag.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","_httpClient","apiUrl","get","bug","post","providedIn","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","BuggetboardComponent","_dialog","_snackBar","_apiService","GroupList","BugList","getBugList","subscribe","data","getGroupList","dialogRef","open","currentDate","Date","toLocaleDateString","createdBy","afterClosed","description","owner","summary","console","log","duration","postBug","newBug","NewBugDiagComponent","desc","sum","createdOn","value","status","close","save","cancel","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Bug, Group } from \"../../Models/models.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  apiUrl = 'https://my-json-server.typicode.com/MoB812/MyJSONServer';\n\n  // Constructor\n  constructor(private _httpClient: HttpClient) { }\n\n  // Api GET request - Bug List\n  getBugList() {\n    return this._httpClient.get<any[]>(this.apiUrl + '/bugs');\n  }\n  // Api GET request - Group List\n  getGroupList() {\n    // Need to implement a way to only get groups for particular uid\n    // For now this only provides ALL groups for testing front end\n    return this._httpClient.get<any[]>(this.apiUrl + '/groups');\n  }\n  // Api POST request - New Bug\n  postBug(bug: Bug) {\n    return this._httpClient.post(this.apiUrl, bug);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BuggetBoard-App';\n}\n","<main>\n  <app-buggetboard></app-buggetboard>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\nimport { AppComponent } from './app.component';\nimport { BuggetboardComponent } from \"./buggetboard/buggetboard.component\";\nimport { NewBugDiagComponent } from './new-bug-diag/new-bug-diag.component';\n\nimport { ApiService } from \"./Services/api/api.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BuggetboardComponent,\n    NewBugDiagComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NewBugDiagComponent } from \"../new-bug-diag/new-bug-diag.component\";\n\nimport { Bug, Group } from \"../Models/models.model\";\nimport { ApiService } from '../Services/api/api.service';\n\n@Component({\n  selector: 'app-buggetboard',\n  templateUrl: './buggetboard.component.html',\n  styleUrls: ['./buggetboard.component.css']\n})\n\nexport class BuggetboardComponent implements OnInit {\n\n  // Data store variable for data from API fetch\n  GroupList: Group[] = [];\n  BugList: Bug[] = [];\n\n  constructor(\n    public _dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private _apiService: ApiService\n  ) { }\n\n  ngOnInit() {\n    this._apiService.getBugList().subscribe(data => { this.BugList = data; })\n    this._apiService.getGroupList().subscribe(data => { this.GroupList = data; })\n    return;\n  }\n\n  // New Bug button was pressed, show the dialog form to be filled\n  newBug(): void {\n\n    // Open a new dialog form\n    const dialogRef = this._dialog.open(NewBugDiagComponent, {\n      // Generate new ID from DB, date, and created by, then pass to form for autofilling\n      data: {\n        id: '123456',\n        currentDate: new Date().toLocaleDateString(),\n        createdBy: 'Moshe B.',\n      }\n    });\n\n    // Dialog window has been closed, process the passed object\n    dialogRef.afterClosed().subscribe(data => {\n\n      if (!data) {\n        // Clicked away do nothing\n      } else if (data.description == '' || data.owner == '' || data.summary == '') {\n        // Empty form fields, notify and do nothing\n        console.log('empty forms');\n        this._snackBar.open('Empty form fields, try again.', 'close', {\n          duration: 4000,\n        });\n      } else if (data) {\n        console.log('2');\n        // Submit was pressed, save the data\n        console.log('POST Bug.....');\n\n        this._apiService.postBug(data)\n          .subscribe(data => {\n            console.log('DATA POSTED. Return value: ');\n            console.log(data);\n          });\n      }\n\n    });\n\n  }\n}\n","<!-- HEADER -->\n\n<mat-toolbar color=\"primary\">\n  <h1>Bugget Board</h1>\n  <div class=\"divMenu\">\n    <button class=\"btnCreateBug\" mat-raised-button color=\"accent\" (click)=\"newBug()\">New Bug</button>\n    <button class=\"btnMenu\" mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\">Menu <i></i></button>\n\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>Create Group</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"groups\" *ngIf=\"GroupList.length > 0\">Change Group</button>\n    </mat-menu>\n    <mat-menu #groups=\"matMenu\">\n      <button mat-menu-item *ngFor=\"let group of GroupList\">{{ group.gName }}</button>\n    </mat-menu>\n\n    <button class=\"btnLogout\" mat-flat-button color=\"primary\">Logout</button>\n  </div>\n</mat-toolbar>\n\n<!-- BODY -->\n<mat-card>\n  <mat-accordion *ngIf=\"BugList.length > 0\">\n    <mat-expansion-panel *ngFor=\"let bug of BugList\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          ID: {{bug.id}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{ bug.description }}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-form-field>\n        <div class=\"card-grid-container\">\n          <button mat-flat-button color=\"accent\" class=\"btnEdit\">edit</button>\n          <textarea matInput readonly rows=\" 10\" class=\"taSummary\"> {{ bug.summary }} </textarea>\n          <label class=\"lblGNum\"><b>G#:</b> {{ bug.gid }}</label>\n          <label class=\"lblStatus\"><b>Status:</b> {{ bug.status }}</label>\n          <label class=\"lblOwner\"><b>Owner:</b> {{ bug.owner }}</label>\n          <label class=\"lblCreatedBy\"><b>Created By:</b> {{ bug.createdBy }}</label>\n          <label class=\"lblCreatedOn\"><b>Created On:</b> {{ bug.createdOn }}</label>\n        </div>\n      </mat-form-field>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <h3 class=\"info-txt mat-body-1\" *ngIf=\"BugList.length <= 0\">No bugs created so far!</h3>\n</mat-card>\n","import { Component, OnInit, Inject, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-bug-diag',\n  templateUrl: './new-bug-diag.component.html',\n  styleUrls: ['./new-bug-diag.component.css']\n})\n\nexport class NewBugDiagComponent implements OnInit {\n\n  // Constructor for New Bug Dialog window\n  constructor(public dialogRef: MatDialogRef<NewBugDiagComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void { }\n\n  // Dialog has been submitted, process the data\n  save(desc: HTMLTextAreaElement, sum: HTMLTextAreaElement, owner: HTMLTextAreaElement) {\n\n    // Save the form data to new bug object\n    const newBug = {\n      id: this.data.id,\n      createdOn: this.data.currentDate,\n      createdBy: this.data.createdBy,\n      description: desc.value,\n      summary: sum.value,\n      owner: owner.value,\n      status: 'Open'\n    };\n    // Pass new bug object to main form\n    this.dialogRef.close(newBug);\n  }\n\n  // Dialog has been cancelled, do nothing.\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Create New Bug</h2>\n\n<mat-dialog-content>\n  <p>Enter the following information to create a bug.</p>\n</mat-dialog-content>\n\n<mat-label>ID: {{data.id}}</mat-label>\n<br>\n<mat-label>Date: {{data.currentDate}}</mat-label>\n<br>\n<mat-label>Created By: {{data.createdBy}}</mat-label>\n<br>\n<br>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Brief Description</mat-label>\n  <input matInput required #inDescription>\n  <mat-error *ngIf=\"inDescription.invalid\">Please enter a description.</mat-error>\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Summary</mat-label>\n  <textarea rows=\"7\" matInput required #txtSummary></textarea>\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Owner</mat-label>\n  <input matInput required #inOwner>\n</mat-form-field>\n\n<mat-dialog-actions>\n  <button mat-raised-button (click)=\"save(inDescription, txtSummary, inOwner)\">Save</button>\n  <button mat-button (click)=\"cancel()\">Cancel</button>\n</mat-dialog-actions>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}