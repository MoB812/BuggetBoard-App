{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Services/api/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/buggetboard/buggetboard.component.ts","./src/app/buggetboard/buggetboard.component.html","./src/app/new-bug-diag/new-bug-diag.component.ts","./src/app/new-bug-diag/new-bug-diag.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,UAAU;IAIrB,cAAc;IACd,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAH3C,WAAM,GAAG,yDAAyD,CAAC;IAGpB,CAAC;IAEhD,6BAA6B;IAC7B,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAQ,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC;IAC5D,CAAC;IACD,+BAA+B;IAC/B,YAAY;QACV,gEAAgE;QAChE,8DAA8D;QAC9D,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC;IAC9D,CAAC;IACD,6BAA6B;IAC7B,OAAO,CAAC,GAAQ;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;IAC3D,CAAC;;oEApBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAHT,MAAM;6FAGP,UAAU;cAJtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,uEACE;QAAA,6EAAmC;QACrC,4DAAO;;6FDKM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACqB;AACtC;AACI;AACW;AAEC;AACF;AACI;AACE;AACI;AACV;AACI;AACK;AAEjB;AAC4B;AACC;AAEpB;;AAyBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBAHT,CAAC,qEAAU,CAAC,YAdd;YACP,uEAAa;YACb,4FAAuB;YACvB,qEAAgB;YAChB,0DAAW;YACX,sEAAc;YACd,oEAAa;YACb,wEAAe;YACf,0EAAgB;YAChB,8EAAkB;YAClB,qEAAa;YACb,yEAAe;YACf,8EAAiB;SAClB;mIAIU,SAAS,mBArBlB,4DAAY;QACZ,wFAAoB;QACpB,yFAAmB,aAGnB,uEAAa;QACb,4FAAuB;QACvB,qEAAgB;QAChB,0DAAW;QACX,sEAAc;QACd,oEAAa;QACb,wEAAe;QACf,0EAAgB;QAChB,8EAAkB;QAClB,qEAAa;QACb,yEAAe;QACf,8EAAiB;6FAKR,SAAS;cAvBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,wFAAoB;oBACpB,yFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,qEAAgB;oBAChB,0DAAW;oBACX,sEAAc;oBACd,oEAAa;oBACb,wEAAe;oBACf,0EAAgB;oBAChB,8EAAkB;oBAClB,qEAAa;oBACb,yEAAe;oBACf,8EAAiB;iBAClB;gBACD,SAAS,EAAE,CAAC,qEAAU,CAAC;gBACvB,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG2B;;;;;;;;;;;;;;ICOvE,6EAAgF;IAAA,uEAAY;IAAA,4DAAS;;;;IAA/E,kFAA4B;;;IAGlD,4EAAsD;IAAA,uDAAiB;IAAA,4DAAS;;;IAA1B,0DAAiB;IAAjB,gFAAiB;;;IAUzE,sFACE;IAAA,6FACE;IAAA,kFACE;IAAA,uDACF;IAAA,4DAAkB;IAClB,wFACE;IAAA,uDACF;IAAA,4DAAwB;IAC1B,4DAA6B;IAC7B,iFACE;IAAA,0EACE;IAAA,6EAAuD;IAAA,+DAAI;IAAA,4DAAS;IACpE,gFAA0D;IAAA,wDAAkB;IAAA,4DAAW;IACvF,6EAAuB;IAAA,qEAAG;IAAA,+DAAG;IAAA,4DAAI;IAAC,wDAAa;IAAA,4DAAQ;IACvD,6EAAyB;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAC,wDAAgB;IAAA,4DAAQ;IAChE,6EAAwB;IAAA,qEAAG;IAAA,kEAAM;IAAA,4DAAI;IAAC,wDAAe;IAAA,4DAAQ;IAC7D,6EAA4B;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAAC,wDAAmB;IAAA,4DAAQ;IAC1E,6EAA4B;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAAC,wDAAmB;IAAA,4DAAQ;IAC5E,4DAAM;IACR,4DAAiB;IACnB,4DAAsB;;;IAjBhB,0DACF;IADE,0FACF;IAEE,0DACF;IADE,+FACF;IAK4D,0DAAkB;IAAlB,2FAAkB;IAC1C,0DAAa;IAAb,sFAAa;IACP,0DAAgB;IAAhB,yFAAgB;IAClB,0DAAe;IAAf,wFAAe;IACN,0DAAmB;IAAnB,4FAAmB;IACnB,0DAAmB;IAAnB,4FAAmB;;;IAlB1E,gFACE;IAAA,mKACE;IAoBJ,4DAAgB;;;IArBO,0DAA2B;IAA3B,mFAA2B;;;IAsBlD,yEAA4D;IAAA,kFAAuB;IAAA,4DAAK;;AD/BnF,MAAM,oBAAoB;IAM/B,YACS,OAAkB,EACjB,SAAsB,EACtB,WAAuB;QAFxB,YAAO,GAAP,OAAO,CAAW;QACjB,cAAS,GAAT,SAAS,CAAa;QACtB,gBAAW,GAAX,WAAW,CAAY;QAPjC,8CAA8C;QAC9C,cAAS,GAAY,EAAE,CAAC;QACxB,YAAO,GAAU,EAAE,CAAC;IAMhB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7E,OAAO;IACT,CAAC;IAED,gEAAgE;IAChE,MAAM;QAEJ,yBAAyB;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wFAAmB,EAAE;YACvD,mFAAmF;YACnF,IAAI,EAAE;gBACJ,EAAE,EAAE,QAAQ;gBACZ,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE;gBAC5C,SAAS,EAAE,UAAU;aACtB;SACF,CAAC,CAAC;QAEH,2DAA2D;QAC3D,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEvC,IAAI,CAAC,IAAI,EAAE;gBACT,0BAA0B;aAC3B;iBAAM,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;gBAC3E,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+BAA+B,EAAE,OAAO,EAAE;oBAC5D,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM,IAAI,IAAI,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,oCAAoC;gBACpC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAE7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;qBAC3B,SAAS,CAAC,IAAI,CAAC,EAAE;oBAChB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;oBAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;aACN;QAEH,CAAC,CAAC,CAAC;IAEL,CAAC;;wFAxDU,oBAAoB;oGAApB,oBAAoB;QCZjC,iFACE;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,yEACE;QAAA,4EAAiF;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAO;QAAA,4DAAS;QACjG,4EAAqF;QAAA,gEAAK;QAAA,+DAAO;QAAA,4DAAS;QAE1G,oFACE;QAAA,6EAAsB;QAAA,wEAAY;QAAA,4DAAS;QAC3C,wHAAgF;QAClF,4DAAW;QACX,qFACE;QAAA,wHAAsD;QACxD,4DAAW;QAEX,6EAA0D;QAAA,kEAAM;QAAA,4DAAS;QAC3E,4DAAM;QACR,4DAAc;QAGd,4EACE;QAAA,uIACE;QAsBF,iHAA4D;QAC9D,4DAAW;;;QAxCmD,0DAA0B;QAA1B,kFAA0B;QAI/B,0DAA4B;QAA5B,0FAA4B;QAGzD,0DAA+B;QAA/B,kFAA+B;QAS1C,0DAA0B;QAA1B,wFAA0B;QAuBT,0DAA2B;QAA3B,yFAA2B;;6FD/BhD,oBAAoB;cANhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACd;;;;;;;;ICevE,4EAAyC;IAAA,sFAA2B;IAAA,4DAAY;;ADP3E,MAAM,mBAAmB;IAE9B,wCAAwC;IACxC,YAAmB,SAA4C,EAC7B,IAAS;QADxB,cAAS,GAAT,SAAS,CAAmC;QAC7B,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAEhD,QAAQ,KAAW,CAAC;IAEpB,8CAA8C;IAC9C,IAAI,CAAC,IAAyB,EAAE,GAAwB,EAAE,KAA0B;QAElF,uCAAuC;QACvC,MAAM,MAAM,GAAG;YACb,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YAChC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,WAAW,EAAE,IAAI,CAAC,KAAK;YACvB,OAAO,EAAE,GAAG,CAAC,KAAK;YAClB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QACF,mCAAmC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAyC;IACzC,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;sFA5BU,mBAAmB,0MAIpB,wEAAe;mGAJd,mBAAmB;;QCThC,wEAAqB;QAAA,yEAAc;QAAA,4DAAK;QAExC,qFACE;QAAA,oEAAG;QAAA,2GAAgD;QAAA,4DAAI;QACzD,4DAAqB;QAErB,4EAAW;QAAA,uDAAe;QAAA,4DAAY;QACtC,gEACA;QAAA,4EAAW;QAAA,uDAA0B;QAAA,4DAAY;QACjD,iEACA;QAAA,6EAAW;QAAA,wDAA8B;QAAA,4DAAY;QACrD,iEACA;QAAA,iEACA;QAAA,qFACE;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,0EACA;QAAA,6HAAyC;QAC3C,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,6EAA4D;QAC9D,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,0EACF;QAAA,4DAAiB;QAEjB,sFACE;QAAA,6EAA6E;QAAnD,+aAAS,uBAAwC,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC1F,6EAAsC;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACvD,4DAAqB;;;QA1BV,0DAAe;QAAf,yFAAe;QAEf,0DAA0B;QAA1B,oGAA0B;QAE1B,0DAA8B;QAA9B,wGAA8B;QAM5B,0DAA6B;QAA7B,6EAA6B;;6FDP7B,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;sBAMI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEb3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Bug, Group } from \"../../Models/models.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  apiUrl = 'https://my-json-server.typicode.com/MoB812/MyJSONServer';\n\n  // Constructor\n  constructor(private _httpClient: HttpClient) { }\n\n  // Api GET request - Bug List\n  getBugList() {\n    return this._httpClient.get<any[]>(this.apiUrl + '/bugs');\n  }\n  // Api GET request - Group List\n  getGroupList() {\n    // Need to implement a way to only get groups for particular uid\n    // For now this only provides ALL groups for testing front end\n    return this._httpClient.get<any[]>(this.apiUrl + '/groups');\n  }\n  // Api POST request - New Bug\n  postBug(bug: Bug) {\n    return this._httpClient.post(this.apiUrl + '/bugs', bug);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BuggetBoard-App';\n}\n","<main>\n  <app-buggetboard></app-buggetboard>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\nimport { AppComponent } from './app.component';\nimport { BuggetboardComponent } from \"./buggetboard/buggetboard.component\";\nimport { NewBugDiagComponent } from './new-bug-diag/new-bug-diag.component';\n\nimport { ApiService } from \"./Services/api/api.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BuggetboardComponent,\n    NewBugDiagComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NewBugDiagComponent } from \"../new-bug-diag/new-bug-diag.component\";\n\nimport { Bug, Group } from \"../Models/models.model\";\nimport { ApiService } from '../Services/api/api.service';\n\n@Component({\n  selector: 'app-buggetboard',\n  templateUrl: './buggetboard.component.html',\n  styleUrls: ['./buggetboard.component.css']\n})\n\nexport class BuggetboardComponent implements OnInit {\n\n  // Data store variable for data from API fetch\n  GroupList: Group[] = [];\n  BugList: Bug[] = [];\n\n  constructor(\n    public _dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private _apiService: ApiService\n  ) { }\n\n  ngOnInit() {\n    this._apiService.getBugList().subscribe(data => { this.BugList = data; })\n    this._apiService.getGroupList().subscribe(data => { this.GroupList = data; })\n    return;\n  }\n\n  // New Bug button was pressed, show the dialog form to be filled\n  newBug(): void {\n\n    // Open a new dialog form\n    const dialogRef = this._dialog.open(NewBugDiagComponent, {\n      // Generate new ID from DB, date, and created by, then pass to form for autofilling\n      data: {\n        id: '123456',\n        currentDate: new Date().toLocaleDateString(),\n        createdBy: 'Moshe B.',\n      }\n    });\n\n    // Dialog window has been closed, process the passed object\n    dialogRef.afterClosed().subscribe(data => {\n\n      if (!data) {\n        // Clicked away do nothing\n      } else if (data.description == '' || data.owner == '' || data.summary == '') {\n        // Empty form fields, notify and do nothing\n        console.log('empty forms');\n        this._snackBar.open('Empty form fields, try again.', 'close', {\n          duration: 4000,\n        });\n      } else if (data) {\n        console.log('2');\n        // Submit was pressed, save the data\n        console.log('POST Bug.....');\n\n        this._apiService.postBug(data)\n          .subscribe(data => {\n            console.log('DATA POSTED. Return value: ');\n            console.log(data);\n          });\n      }\n\n    });\n\n  }\n}\n","<!-- HEADER -->\n\n<mat-toolbar color=\"primary\">\n  <h1>Bugget Board</h1>\n  <div class=\"divMenu\">\n    <button class=\"btnCreateBug\" mat-raised-button color=\"accent\" (click)=\"newBug()\">New Bug</button>\n    <button class=\"btnMenu\" mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\">Menu <i></i></button>\n\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>Create Group</button>\n      <button mat-menu-item [matMenuTriggerFor]=\"groups\" *ngIf=\"GroupList.length > 0\">Change Group</button>\n    </mat-menu>\n    <mat-menu #groups=\"matMenu\">\n      <button mat-menu-item *ngFor=\"let group of GroupList\">{{ group.gName }}</button>\n    </mat-menu>\n\n    <button class=\"btnLogout\" mat-flat-button color=\"primary\">Logout</button>\n  </div>\n</mat-toolbar>\n\n<!-- BODY -->\n<mat-card>\n  <mat-accordion *ngIf=\"BugList.length > 0\">\n    <mat-expansion-panel *ngFor=\"let bug of BugList\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          ID: {{bug.id}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{ bug.description }}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-form-field>\n        <div class=\"card-grid-container\">\n          <button mat-flat-button color=\"accent\" class=\"btnEdit\">edit</button>\n          <textarea matInput readonly rows=\" 10\" class=\"taSummary\"> {{ bug.summary }} </textarea>\n          <label class=\"lblGNum\"><b>G#:</b> {{ bug.gid }}</label>\n          <label class=\"lblStatus\"><b>Status:</b> {{ bug.status }}</label>\n          <label class=\"lblOwner\"><b>Owner:</b> {{ bug.owner }}</label>\n          <label class=\"lblCreatedBy\"><b>Created By:</b> {{ bug.createdBy }}</label>\n          <label class=\"lblCreatedOn\"><b>Created On:</b> {{ bug.createdOn }}</label>\n        </div>\n      </mat-form-field>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <h3 class=\"info-txt mat-body-1\" *ngIf=\"BugList.length <= 0\">No bugs created so far!</h3>\n</mat-card>\n","import { Component, OnInit, Inject, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-bug-diag',\n  templateUrl: './new-bug-diag.component.html',\n  styleUrls: ['./new-bug-diag.component.css']\n})\n\nexport class NewBugDiagComponent implements OnInit {\n\n  // Constructor for New Bug Dialog window\n  constructor(public dialogRef: MatDialogRef<NewBugDiagComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void { }\n\n  // Dialog has been submitted, process the data\n  save(desc: HTMLTextAreaElement, sum: HTMLTextAreaElement, owner: HTMLTextAreaElement) {\n\n    // Save the form data to new bug object\n    const newBug = {\n      id: this.data.id,\n      createdOn: this.data.currentDate,\n      createdBy: this.data.createdBy,\n      description: desc.value,\n      summary: sum.value,\n      owner: owner.value,\n      status: 'Open'\n    };\n    // Pass new bug object to main form\n    this.dialogRef.close(newBug);\n  }\n\n  // Dialog has been cancelled, do nothing.\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Create New Bug</h2>\n\n<mat-dialog-content>\n  <p>Enter the following information to create a bug.</p>\n</mat-dialog-content>\n\n<mat-label>ID: {{data.id}}</mat-label>\n<br>\n<mat-label>Date: {{data.currentDate}}</mat-label>\n<br>\n<mat-label>Created By: {{data.createdBy}}</mat-label>\n<br>\n<br>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Brief Description</mat-label>\n  <input matInput required #inDescription>\n  <mat-error *ngIf=\"inDescription.invalid\">Please enter a description.</mat-error>\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Summary</mat-label>\n  <textarea rows=\"7\" matInput required #txtSummary></textarea>\n</mat-form-field>\n\n<mat-form-field appearance=\"fill\">\n  <mat-label>Owner</mat-label>\n  <input matInput required #inOwner>\n</mat-form-field>\n\n<mat-dialog-actions>\n  <button mat-raised-button (click)=\"save(inDescription, txtSummary, inOwner)\">Save</button>\n  <button mat-button (click)=\"cancel()\">Cancel</button>\n</mat-dialog-actions>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}